--// BOORRADOR DE TABLAS //
DROP TABLE ADMINISTRATIVO CASCADE CONSTRAINTS;
DROP TABLE AFP CASCADE CONSTRAINTS;
DROP TABLE CATEGORIA CASCADE CONSTRAINTS;
DROP TABLE COMUNA CASCADE CONSTRAINTS;
DROP TABLE DETALLE_VENTA CASCADE CONSTRAINTS;
DROP TABLE EMPLEADO CASCADE CONSTRAINTS;
DROP TABLE MARCA CASCADE CONSTRAINTS;
DROP TABLE MEDIO_PAGO CASCADE CONSTRAINTS;
DROP TABLE PRODUCTO CASCADE CONSTRAINTS;
DROP TABLE PROVEEDOR CASCADE CONSTRAINTS;
DROP TABLE REGION CASCADE CONSTRAINTS;
DROP TABLE SALUD CASCADE CONSTRAINTS;
DROP TABLE VENDEDOR CASCADE CONSTRAINTS;
DROP TABLE VENTA CASCADE CONSTRAINTS;
DROP SEQUENCE SEQ_EMPLEADO;


------- [ CASO 1 ] [ CASO 1 ][ CASO 1 ] [ CASO 1 ] [ CASO 1 ]--------
--// REGION //
CREATE TABLE REGION (
    id_region      NUMBER(4) GENERATED ALWAYS AS IDENTITY,
    nom_region     VARCHAR2(255) NOT NULL,
    CONSTRAINT REGION_PK PRIMARY KEY (id_region)
);

--// COMUNA // 
CREATE TABLE COMUNA (
    id_comuna      NUMBER(4) GENERATED ALWAYS AS IDENTITY,
    nom_comuna     VARCHAR2(100) NOT NULL,
    cod_region     NUMBER(4) NOT NULL,
    CONSTRAINT COMUNA_PK PRIMARY KEY (id_comuna),
    CONSTRAINT COMUNA_FK_REGION FOREIGN KEY (cod_region) REFERENCES REGION (id_region)
);

--// PROVEEDOR //
CREATE TABLE PROVEEDOR (
    id_proveedor   NUMBER(5) GENERATED ALWAYS AS IDENTITY,
    nombre_proveedor VARCHAR2(150) NOT NULL,
    rut_proveedor  VARCHAR2(10) NOT NULL,
    telefono       VARCHAR2(10),
    email          VARCHAR2(200),
    direccion      VARCHAR2(200),
    cod_comuna     NUMBER(4),
    CONSTRAINT PROVEEDOR_PK PRIMARY KEY (id_proveedor),
    CONSTRAINT PROVEEDOR_FK_COMUNA FOREIGN KEY (cod_comuna) REFERENCES COMUNA (id_comuna)
);

--// CATEGORIA // 
CREATE TABLE CATEGORIA (
    id_categoria     NUMBER(3) GENERATED ALWAYS AS IDENTITY,
    nombre_categoria VARCHAR2(255) NOT NULL,
    CONSTRAINT CATEGORIA_PK PRIMARY KEY (id_categoria)
);
--// MARCA // 

CREATE TABLE MARCA (
    id_marca      NUMBER(3) GENERATED ALWAYS AS IDENTITY,
    nombre_marca  VARCHAR2(25) NOT NULL,
    CONSTRAINT MARCA_PK PRIMARY KEY (id_marca)
);

--// PRODUCTO // 
CREATE TABLE PRODUCTO (
    id_producto     NUMBER(4) GENERATED ALWAYS AS IDENTITY,
    nombre_producto VARCHAR2(100) NOT NULL,
    precio_unitario NUMBER,
    origen_nacional CHAR(1),
    stock_minimo    NUMBER(3),
    activo          CHAR(1),
    cod_marca       NUMBER(3),
    cod_categoria   NUMBER(3),
    cod_proveedor   NUMBER(5),
    CONSTRAINT PRODUCTO_PK PRIMARY KEY (id_producto),
    CONSTRAINT PRODUCTO_FK_MARCA FOREIGN KEY (cod_marca) REFERENCES MARCA (id_marca),
    CONSTRAINT PRODUCTO_FK_CATEGORIA FOREIGN KEY (cod_categoria) REFERENCES CATEGORIA (id_categoria),
    CONSTRAINT PRODUCTO_FK_PROVEEDOR FOREIGN KEY (cod_proveedor) REFERENCES PROVEEDOR (id_proveedor)
);

--// AFP //
CREATE TABLE AFP (
    id_afp     NUMBER(5) GENERATED BY DEFAULT AS IDENTITY (START WITH 210 INCREMENT BY 6),
    nom_afp    VARCHAR2(255) NOT NULL,
    CONSTRAINT AFP_PK PRIMARY KEY (id_afp)
);

--// SALUD //
CREATE TABLE SALUD (
    id_salud   NUMBER(4) GENERATED BY DEFAULT AS IDENTITY (START WITH 2050 INCREMENT BY 10),
    
    nom_salud  VARCHAR2(40) NOT NULL,
    CONSTRAINT SALUD_PK PRIMARY KEY (id_salud)
);

--// EMPLEADO // 
CREATE TABLE EMPLEADO (
    id_empleado        NUMBER(4),
    rut_empleado       VARCHAR2(10) NOT NULL,
    nombre_empleado    VARCHAR2(25) NOT NULL,
    apellido_paterno   VARCHAR2(25),
    apellido_materno   VARCHAR2(25),
    fecha_contratacion DATE,
    sueldo_base        NUMBER(10,2),
    bono_jefatura      NUMBER(10,2),
    activo             CHAR(1),
    tipo_empleado      VARCHAR2(25),
    cod_empleado       NUMBER(4),
    cod_salud          NUMBER(4),
    cod_afp            NUMBER(5),
    CONSTRAINT EMPLEADO_PK PRIMARY KEY (id_empleado),
    CONSTRAINT EMPLEADO_FK_SALUD FOREIGN KEY (cod_salud) REFERENCES SALUD (id_salud),
    CONSTRAINT EMPLEADO_FK_AFP FOREIGN KEY (cod_afp) REFERENCES AFP (id_afp),
    CONSTRAINT EMPLEADO_FK_EMPLEADO FOREIGN KEY (cod_empleado) REFERENCES EMPLEADO (id_empleado)
);

--// VENDEDOR //
CREATE TABLE VENDEDOR (
    id_empleado     NUMBER(4),
    comision_venta  NUMBER(5,2),
    CONSTRAINT VENDEDOR_PK PRIMARY KEY (id_empleado),
    CONSTRAINT VENDEDOR_FK_EMPLEADO FOREIGN KEY (id_empleado) REFERENCES EMPLEADO (id_empleado)
);

-- // ADMINISTRATIVO //

CREATE TABLE ADMINISTRATIVO (
    id_empleado NUMBER(4),
    CONSTRAINT ADMINISTRATIVO_PK PRIMARY KEY (id_empleado),
    CONSTRAINT ADMIN_FK_EMPLEADO FOREIGN KEY (id_empleado) REFERENCES EMPLEADO (id_empleado)
);

-- // MEDIO PAGO //
CREATE TABLE MEDIO_PAGO (
    id_mpago     NUMBER(3) GENERATED ALWAYS AS IDENTITY,
    nombre_mpago VARCHAR2(50),
    CONSTRAINT MEDIO_PAGO_PK PRIMARY KEY (id_mpago)
);

-- //VENTA //
CREATE TABLE VENTA (
    id_venta     NUMBER(4) GENERATED BY DEFAULT AS IDENTITY (START WITH 5050 INCREMENT BY 3),
    fecha_venta  DATE,
    total_venta  NUMBER(10),
    cod_mpago    NUMBER(3),
    cod_empleado NUMBER(4),
    CONSTRAINT VENTA_PK PRIMARY KEY (id_venta),
    CONSTRAINT VENTA_FK_MEDIO_PAGO FOREIGN KEY (cod_mpago) REFERENCES MEDIO_PAGO (id_mpago),
    CONSTRAINT VENTA_FK_EMPLEADO FOREIGN KEY (cod_empleado) REFERENCES EMPLEADO (id_empleado)
);

--// DETALLE VENTA // 
CREATE TABLE DETALLE_VENTA (
    cod_venta    NUMBER(4),
    cod_producto NUMBER(4),
    cantidad     NUMBER(6),
    CONSTRAINT DETALLE_VENTA_PK PRIMARY KEY (cod_venta, cod_producto),
    CONSTRAINT DET_VENTA_FK_VENTA FOREIGN KEY (cod_venta) REFERENCES VENTA (id_venta),
    CONSTRAINT DET_VENTA_FK_PRODUCTO FOREIGN KEY (cod_producto) REFERENCES PRODUCTO (id_producto)
);

------- [ CASO 2 ] [ CASO 2 ][ CASO 2 ] [ CASO 2  ] [ CASO 2 ]--------

-- // MODIFICACION A EMPLEADO //
ALTER TABLE EMPLEADO
ADD CHECK (sueldo_base >= 400000);
-- // MODIFICACION A VENDEDOR //
ALTER TABLE VENDEDOR
ADD CONSTRAINT CK_VENDEDOR_COMISION CHECK (comision_venta BETWEEN 0 AND 0.25);
-- // MODIFICACION A PODUCTO // 
ALTER TABLE PRODUCTO
ADD CONSTRAINT CK_PRODUCTO_STOCK_MINIMO CHECK (stock_minimo >= 3);
-- // MODIFICACION A PROVEEDOR //
ALTER TABLE PROVEEDOR
ADD CONSTRAINT UK_PROVEEDOR_EMAIL UNIQUE (email);

-- // MODIFICACION A MARCA //
ALTER TABLE MARCA
ADD CONSTRAINT UK_MARCA_NOMBRE UNIQUE (nombre_marca);

-- // MODIFICACION A DETALLE VENTA // 
ALTER TABLE DETALLE_VENTA
ADD CHECK (cantidad > 0);

------- [ CASO 3 ] [ CASO 3 ][ CASO 3 ] [ CASO 3  ] [ CASO 3 ]--------
CREATE SEQUENCE SEQ_EMPLEADO START WITH 750 INCREMENT BY 3;


-- llenamos nombre region
INSERT INTO REGION (nom_region) VALUES ('Region Metropolitana');
INSERT INTO REGION (nom_region) VALUES ('Valparaiso');
INSERT INTO REGION (nom_region) VALUES ('Biobio');
INSERT INTO REGION (nom_region) VALUES ('Los Lagos');

-- llenamos medio pago
INSERT INTO MEDIO_PAGO (nombre_mpago) VALUES ('Efectivo');
INSERT INTO MEDIO_PAGO (nombre_mpago) VALUES ('Tarjeta Debito');
INSERT INTO MEDIO_PAGO (nombre_mpago) VALUES ('Tarjeta Credito');
INSERT INTO MEDIO_PAGO (nombre_mpago) VALUES ('Cheque');

-- llenamos afp
INSERT INTO AFP (nom_afp) VALUES ('Afp Habitat');
INSERT INTO AFP (nom_afp) VALUES ('Afp Cuprum');
INSERT INTO AFP (nom_afp) VALUES ('Afp Provida');
INSERT INTO AFP (nom_afp) VALUES ('Afp PlanVital');

-- llenamos salud
INSERT INTO SALUD (nom_salud) VALUES ('Fonasa');
INSERT INTO SALUD (nom_salud) VALUES ('Isapre Colmena');
INSERT INTO SALUD (nom_salud) VALUES ('Isapre Banmedica');
INSERT INTO SALUD (nom_salud) VALUES ('Isapre Cruz Blanca');

-- llenamos empleados
INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp)
VALUES (750, '11111111-1', 'Marcela', 'González', 'Pérez', TO_DATE('15-03-2022','DD-MM-YYYY'), 950000, 80000, 'S', 'Administrativo', NULL, 2050, 210);

INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp)
VALUES (753, '22222222-2', 'José', 'Muñoz', 'Ramírez', TO_DATE('10-07-2021','DD-MM-YYYY'), 900000, 75000, 'S', 'Administrativo', NULL, 2060, 216);

INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp)
VALUES (756, '33333333-3', 'Verónica', 'Soto', 'Alarcón', TO_DATE('05-01-2020','DD-MM-YYYY'), 880000, 70000, 'S', 'Vendedor', 750, 2060, 228);

INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp)
VALUES (759, '44444444-4', 'Luis', 'Reyes', 'Fuentes', TO_DATE('01-04-2023','DD-MM-YYYY'), 560000, NULL, 'S', 'Vendedor', 750, 2070, 228);

INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp)
VALUES (762, '55555555-5', 'Claudia', 'Fernández', 'Lagos', TO_DATE('15-04-2023','DD-MM-YYYY'), 600000, NULL, 'S', 'Vendedor', 753, 2070, 216);

INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp)
VALUES (765, '66666666-6', 'Carlos', 'Navarro', 'Vega', TO_DATE('01-05-2023','DD-MM-YYYY'), 610000, NULL, 'S', 'Administrativo', 753, 2060, 210);

INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp)
VALUES (768, '77777777-7', 'Javiera', 'Pino', 'Rojas', TO_DATE('10-05-2023','DD-MM-YYYY'), 650000, NULL, 'S', 'Administrativo', 750, 2050, 210);

INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp)
VALUES (771, '88888888-8', 'Diego', 'Mella', 'Contreras', TO_DATE('12-05-2023','DD-MM-YYYY'), 620000, NULL, 'S', 'Vendedor', 750, 2060, 216);

INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp)
VALUES (774, '99999999-9', 'Fernanda', 'Salas', 'Herrera', TO_DATE('18-05-2023','DD-MM-YYYY'), 570000, NULL, 'S', 'Vendedor', 753, 2070, 228);

INSERT INTO EMPLEADO (id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp)
VALUES (777, '10101010-0', 'Tomás', 'Vidal', 'Espinoza', TO_DATE('01-06-2023','DD-MM-YYYY'), 530000, NULL, 'S', 'Vendedor', NULL, 2050, 222);

------- [ CASO 4 ] [ CASO 4 ][ CASO 4 ] [ CASO 4  ] [ CASO 4 ]--------
-- //informe 1 //
SELECT 
    id_empleado AS "IDENTIFICADOR",
    nombre_empleado || ' ' || apellido_paterno || ' ' || apellido_materno AS "NOMBRE COMPLETO",
    sueldo_base AS "SALARIO",
    bono_jefatura AS "BONIFICACION",
    (sueldo_base + bono_jefatura) AS "SALARIO SIMULADO"
FROM EMPLEADO
WHERE activo = 'S'
  AND bono_jefatura IS NOT NULL
ORDER BY "SALARIO SIMULADO" DESC, apellido_paterno DESC;

-- // informe 2 //

SELECT 
    nombre_empleado || ' ' || apellido_paterno || ' ' || apellido_materno AS "EMPLEADO",
    sueldo_base AS "SUELDO",
    (sueldo_base * 0.08) AS "POSIBLE AUMENTO",
    (sueldo_base * 1.08) AS "SALARIO SIMULADO"
FROM EMPLEADO
WHERE sueldo_base BETWEEN 550000 AND 800000
ORDER BY sueldo_base ASC;

-- __-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_